<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>面试题</title>
    <url>/2022/09/25/%E9%9D%A2%E9%A2%98/</url>
    <content><![CDATA[<p> 面试指南</p>
<span id="more"></span>
<h1 id="CSS-x2F-HTML部分"><a href="#CSS-x2F-HTML部分" class="headerlink" title="CSS&#x2F;HTML部分"></a>CSS&#x2F;HTML部分</h1><h2 id="1-css布局方式"><a href="#1-css布局方式" class="headerlink" title="1.css布局方式"></a>1.css布局方式</h2><pre><code>1.table布局(不常用)
2.flex布局
3.float布局
4.响应式布局
</code></pre>
<h2 id="2-盒子模型"><a href="#2-盒子模型" class="headerlink" title="2.盒子模型"></a>2.盒子模型</h2><blockquote>
<p>标准盒子模型和IE盒子模型</p>
</blockquote>
<pre><code>    IE盒子模型的宽度包括content和padding还有border，标准盒子不包括
</code></pre>
<blockquote>
<p>这两个的区别主要是什么</p>
</blockquote>
<pre><code>    box-sizing:content-box 标准盒子模型
    box-sizing:border-box IE盒子模型
</code></pre>
<h2 id="3-html5新标签"><a href="#3-html5新标签" class="headerlink" title="3.html5新标签"></a>3.html5新标签</h2><blockquote>
<p>canvas 新元素</p>
</blockquote>
<pre><code>    &lt;canvas&gt;标签定义图形，比如图表和其他图像。该标签基于js的绘图API
</code></pre>
<blockquote>
<p>新多媒体元素</p>
</blockquote>
<pre><code>     &lt;audio&gt; 定义音频内容
     &lt;video&gt; 定义视频
</code></pre>
<h2 id="4-BFC"><a href="#4-BFC" class="headerlink" title="4.BFC"></a>4.BFC</h2><blockquote>
<p>BFC，块级格式化上下文，它是页面中一个独立的容器，容器中的元素不会影响到外面的元素。</p>
</blockquote>
<blockquote>
<p>触发条件 (包括但不限于)</p>
</blockquote>
<ul>
<li>根元素，及HTML元素</li>
<li>浮动元素:float值为left、right</li>
<li>overflow值不为visible，为auto、scroll、 hidden</li>
<li>display的值为inline—block，inltable-cell、table-caption、table、inline-table、<br> flex、inline-flex、grid、inline-grid</li>
<li>position的值为absolute或fixed</li>
</ul>
<h2 id="5-浏览器运行机制"><a href="#5-浏览器运行机制" class="headerlink" title="5.浏览器运行机制"></a>5.浏览器运行机制</h2><pre><code>    1.创建DOM树
    2.构建渲染树，css渲染
    3.布局渲染，每个元素的大小位置
    4.绘制渲染树，画出来
    重绘 : 改变元素的外观属性例如div的color、background-color等属性发生改变时

    重排(回流) ：元素的规模尺寸、布局、隐藏改变时

    代价 : 耗时，导致浏览器卡慢
</code></pre>
<h2 id="6-居中的方式"><a href="#6-居中的方式" class="headerlink" title="6.居中的方式"></a>6.居中的方式</h2><p>  <strong>垂直居中的方式</strong></p>
<p>  行高&#x3D;高</p>
<p>  绝对定位top50%,自身宽度的50%的负值<br>  flex布局 align—center</p>
<p>  <strong>水平居中的方式</strong><br>  绝对定位</p>
<p>  flex布局juest—center</p>
<p>  text-align center</p>
<h2 id="7-rem-em-vh-px各自代表的含义"><a href="#7-rem-em-vh-px各自代表的含义" class="headerlink" title="7.rem,em,vh,px各自代表的含义"></a>7.rem,em,vh,px各自代表的含义</h2><p> <strong>px</strong>:绝对单位，页面按照精确像素展示<br> <strong>em</strong>:相对单位，基准点为父节点字体的大小，如果自身定义了font-size按照自身来计算，整个页面内 <strong>1em</strong> 不是一个固定的值<br> <strong>rem</strong>：相对单位,理解为 <strong>root em</strong>,相对根节点<strong>html</strong>的字体大小来计算<br> <strong>vh、vw</strong>:主要用于视口大小布局，在页面布局上更加方便简单</p>
<h2 id="8-有哪些方式可以隐藏页面元素以及区别"><a href="#8-有哪些方式可以隐藏页面元素以及区别" class="headerlink" title="8.有哪些方式可以隐藏页面元素以及区别"></a>8.有哪些方式可以隐藏页面元素以及区别</h2><ul>
<li>display:none</li>
<li>visibility:hidden</li>
<li>opacity:0</li>
<li>设置height、widht模型属性为0</li>
<li>position:absolute</li>
<li>clip-path</li>
</ul>
<p><strong>区别</strong><br>  <img src="隐藏元素.jpg"></p>
<h2 id="9-什么是响应式设计？响应式设计的基本原理是什么？如何做？"><a href="#9-什么是响应式设计？响应式设计的基本原理是什么？如何做？" class="headerlink" title="9.什么是响应式设计？响应式设计的基本原理是什么？如何做？"></a>9.什么是响应式设计？响应式设计的基本原理是什么？如何做？</h2><pre><code>    响应式网站设计是一种网络页面设计布局，页面的设计与开发应当根据用户行为以及设备环境进行相应的响应和调整
</code></pre>
<p>  <strong>响应式网站常见特点</strong></p>
<ul>
<li>同时适配PC+平板+手机等</li>
<li>标签导航在接近手持设备时改变为经典的抽屉式导航</li>
<li>网站的布局会根据视口来调整模块的大小和位置</li>
</ul>
<p><strong>实现响应式布局的方式如下</strong></p>
<ul>
<li>媒体查询（我们可以设置不同类型的媒体条件，并根据对应的条件，给相应符合条件的媒体调用相对应的样式表）</li>
<li>百分比</li>
<li>vm&#x2F;vh</li>
<li>rem</li>
</ul>
<p>响应式设计实现通常会从以下几个方面思考</p>
<ul>
<li>弹性盒子(包括图片、表格、视频)和媒体查询等技术</li>
<li>使用百分比布局创建流式布局的弹性UI，同时使用媒体查询限制元素的尺寸和内容变更范围</li>
<li>使用相对单位使得内容自适应调节</li>
<li>选择断点，针对不同断点实现不同布局和内容展示</li>
</ul>
<h2 id="10-css选择器有哪些以及优先级"><a href="#10-css选择器有哪些以及优先级" class="headerlink" title="10.css选择器有哪些以及优先级"></a>10.css选择器有哪些以及优先级</h2><p><strong>关于css属性选择器常用的有:</strong></p>
<ul>
<li>id选择器</li>
<li>类(class)选择器</li>
<li>标签选择器</li>
<li>后代选择器</li>
<li>子选择器</li>
<li>相邻同胞选择器</li>
<li>群组选择器</li>
</ul>
<p><strong>还有一些使用频率没那么多的选择器</strong></p>
<ul>
<li><p>伪类选择器</p>
<pre><code>  :link 选择未被访问的链接
  :visited 选择已被访问的链接
  :active 选择活动链接
  :hover 鼠标指针浮动在上面的元素
  :focus 选择具有焦点的
  :first-child 父元素的首个子元素
</code></pre>
</li>
<li><p>伪元素选择器</p>
<pre><code>  :first-letter ：用于选取指定选择器的首字母
  :first-line ：选取指定选择器的首行
  :before : 选择器在被选元素的内容前面插入内容
  :after : 选择器在被选元素的内容后面插入内容
</code></pre>
</li>
<li><p>属性选择器</p>
<pre><code>  [attribute] 选择带有attribute属性的元素
  [attribute=value] 选择所有使用attribute=value的元素
  [attribute~=value] 选择attribute属性包含value的元素
  [attribute|=value]：选择attribute属性以value开头的元素
</code></pre>
</li>
</ul>
<p><strong>在css3中新增的选择器</strong></p>
<ul>
<li><p>层次选择器（p~ul），选择前面有p元素的每个ul元素</p>
</li>
<li><p>伪类选择器</p>
<pre><code>  :first-of-type 父元素的首个元素
  :last-of-type 父元素的最后一个元素
  :only-of-type 父元素的特定类型的唯一子元素
  :only-child 父元素中唯一子元素
  :nth-child(n) 选择父元素中第N个子元素
  :nth-last-of-type(n) 选择父元素中第N个子元素，从后往前
  :last-child 父元素的最后一个元素
  :root 设置HTML文档
  :empty 指定空的元素
  :enabled 选择被禁用元素
  :disabled 选择被禁用元素
  :checked 选择选中的元素
  :not(selector) 选择非 &lt;selector&gt; 元素的所有元素
</code></pre>
</li>
<li><p>属性选择器</p>
<pre><code>  [attribute*=value]：选择attribute属性值包含value的所有元素
  [attribute^=value]：选择attribute属性开头为value的所有元素
  [attribute$=value]：选择attribute属性结尾为value的所有元素
</code></pre>
</li>
</ul>
<p><strong>优先级</strong></p>
<pre><code>    内联 &gt; ID选择器 &gt; 类选择器 &gt; 标签选择器
</code></pre>
<h2 id="清楚浮动的方法"><a href="#清楚浮动的方法" class="headerlink" title="清楚浮动的方法"></a>清楚浮动的方法</h2><p><strong>方法一：使用带 clear 属性的空元素</strong></p>
<p>在浮动元素后使用一个空元素,并在 CSS 中赋 予.clear{clear:both;}属性即可清理浮动。</p>
<p><strong>方法二：使用 CSS 的 overflow 属性</strong></p>
<p>给浮动元素的容器添加 overflow:hidden;或 overflow:auto;可以清除浮动，另外在 IE6 中还 需要触发 hasLayout ，例如为父元素设置容器宽高或设置 zoom:1。 在添加 overflow 属性后，浮动元素又回到了容器层，把容器高度撑起，达到了清理浮动 的效果。</p>
<p><strong>方法三：给浮动的元素的容器添加浮动</strong></p>
<p>给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影 响布局，不推荐使用。</p>
<p><strong>方法四：使用 CSS 的:after 伪元素</strong>    </p>
<p>结合:after 伪元素（注意这不是伪类，而是伪元素，代表一个元素之后最近的元素）和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。 给浮动元素的容器添加一个 clearfix 的 class，然后给这个 class 添加一个:after 伪元素实 现元素末尾添加一个看不见的块元素清除浮动</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/09/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span> <br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
